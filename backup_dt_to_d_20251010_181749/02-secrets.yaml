# ==============================================================================
# DinariBlockchain - Kubernetes Secrets
# 
# ⚠️  CRITICAL SECURITY WARNING ⚠️
# 
# 1. NEVER commit actual secrets to Git
# 2. Use external secret management in production:
#    - AWS Secrets Manager + External Secrets Operator
#    - HashiCorp Vault + Vault Agent Injector
#    - Google Secret Manager
#    - Azure Key Vault
# 3. This file is a TEMPLATE - replace all values before deployment
# 4. Encrypt at rest in etcd (enable encryption in K8s cluster)
# 5. Use RBAC to restrict access to secrets
# 
# Generate secrets using:
#   openssl rand -base64 32
#   kubectl create secret generic ... --dry-run=client -o yaml
# ==============================================================================

# ------------------------------------------------------------------------------
# MAINNET SECRETS
# ------------------------------------------------------------------------------
apiVersion: v1
kind: Secret
metadata:
  name: dinari-mainnet-secrets
  namespace: dinari-mainnet
  labels:
    app: dinari-blockchain
    network: mainnet
type: Opaque
stringData:
  # API Authentication Keys (rotate every 90 days)
  # Generate with: openssl rand -base64 32
  api-key-admin: "REPLACE_WITH_STRONG_32_CHAR_ADMIN_API_KEY"
  api-key-readonly: "REPLACE_WITH_STRONG_32_CHAR_READONLY_API_KEY"
  api-key-mining: "REPLACE_WITH_STRONG_32_CHAR_MINING_API_KEY"
  
  # JWT Secret (minimum 32 characters, rotate every 30 days)
  jwt-secret: "REPLACE_WITH_STRONG_JWT_SECRET_MINIMUM_32_CHARACTERS"
  
  # Miner Addresses (one per mining node - DT prefix)
  # Generate with: ./dinari-node --create-wallet
  miner-address-node-1: "DT1abc123def456ghi789jkl012mno345pqr678stu"
  miner-address-node-2: "DT1xyz987wvu654tsr321pqo098nml876kjh543ife"
  
  # Database Encryption Key (for encrypted backups)
  db-encryption-key: "REPLACE_WITH_STRONG_32_CHAR_ENCRYPTION_KEY"
  
  # Monitoring Credentials
  prometheus-auth-user: "prometheus-admin"
  prometheus-auth-password: "REPLACE_WITH_STRONG_PROMETHEUS_PASSWORD"
  
  # Alert Manager Webhook Secret
  alertmanager-webhook-secret: "REPLACE_WITH_ALERTMANAGER_WEBHOOK_SECRET"

---
# ------------------------------------------------------------------------------
# TESTNET SECRETS
# ------------------------------------------------------------------------------
apiVersion: v1
kind: Secret
metadata:
  name: dinari-testnet-secrets
  namespace: dinari-testnet
  labels:
    app: dinari-blockchain
    network: testnet
type: Opaque
stringData:
  # API Authentication Keys (can be simpler for testnet)
  api-key-admin: "testnet-admin-key-12345"
  api-key-readonly: "testnet-readonly-key-67890"
  api-key-mining: "testnet-mining-key-abcde"
  
  # JWT Secret (testnet)
  jwt-secret: "testnet-jwt-secret-for-development-only"
  
  # Miner Addresses (testnet)
  miner-address-node-1: "DT2testnet111111111111111111111111111111"
  miner-address-node-2: "DT2testnet222222222222222222222222222222"
  
  # Database Encryption Key (testnet)
  db-encryption-key: "testnet-db-encryption-key-12345678"
  
  # Monitoring Credentials
  prometheus-auth-user: "prometheus-testnet"
  prometheus-auth-password: "testnet-prometheus-pass"

---
# ------------------------------------------------------------------------------
# TLS CERTIFICATES (Mainnet)
# ------------------------------------------------------------------------------
# Generate TLS certs with cert-manager or manual:
#   openssl req -x509 -nodes -days 365 -newkey rsa:4096 \
#     -keyout tls.key -out tls.crt -subj "/CN=api.dinarichain.io"
apiVersion: v1
kind: Secret
metadata:
  name: dinari-mainnet-tls
  namespace: dinari-mainnet
  labels:
    app: dinari-blockchain
    network: mainnet
type: kubernetes.io/tls
data:
  # Base64 encoded TLS certificate
  # Generate: cat tls.crt | base64 -w 0
  tls.crt: REPLACE_WITH_BASE64_ENCODED_TLS_CERTIFICATE
  
  # Base64 encoded TLS private key
  # Generate: cat tls.key | base64 -w 0
  tls.key: REPLACE_WITH_BASE64_ENCODED_TLS_PRIVATE_KEY

---
# ------------------------------------------------------------------------------
# TLS CERTIFICATES (Testnet - can use self-signed)
# ------------------------------------------------------------------------------
apiVersion: v1
kind: Secret
metadata:
  name: dinari-testnet-tls
  namespace: dinari-testnet
  labels:
    app: dinari-blockchain
    network: testnet
type: kubernetes.io/tls
data:
  # Self-signed cert for testnet (base64 encoded)
  tls.crt: REPLACE_WITH_BASE64_ENCODED_TESTNET_CERTIFICATE
  tls.key: REPLACE_WITH_BASE64_ENCODED_TESTNET_PRIVATE_KEY

---
# ------------------------------------------------------------------------------
# DOCKER REGISTRY CREDENTIALS (if using private registry)
# ------------------------------------------------------------------------------
apiVersion: v1
kind: Secret
metadata:
  name: dinari-registry-credentials
  namespace: dinari-mainnet
  labels:
    app: dinari-blockchain
type: kubernetes.io/dockerconfigjson
data:
  # Docker registry authentication
  # Generate: kubectl create secret docker-registry ... --dry-run=client -o yaml
  .dockerconfigjson: REPLACE_WITH_DOCKER_CONFIG_JSON_BASE64

---
apiVersion: v1
kind: Secret
metadata:
  name: dinari-registry-credentials
  namespace: dinari-testnet
  labels:
    app: dinari-blockchain
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: REPLACE_WITH_DOCKER_CONFIG_JSON_BASE64

---
# ------------------------------------------------------------------------------
# BACKUP CREDENTIALS (S3/GCS/Azure)
# ------------------------------------------------------------------------------
apiVersion: v1
kind: Secret
metadata:
  name: dinari-backup-credentials
  namespace: dinari-mainnet
  labels:
    app: dinari-blockchain
type: Opaque
stringData:
  # AWS S3 credentials for backups
  aws-access-key-id: "REPLACE_WITH_AWS_ACCESS_KEY_ID"
  aws-secret-access-key: "REPLACE_WITH_AWS_SECRET_ACCESS_KEY"
  aws-region: "us-east-1"
  s3-bucket: "dinari-mainnet-backups"
  
  # Or Google Cloud Storage
  # gcs-service-account-key: "REPLACE_WITH_GCS_SERVICE_ACCOUNT_JSON"
  
  # Or Azure Blob Storage
  # azure-storage-account: "dinaribackups"
  # azure-storage-key: "REPLACE_WITH_AZURE_STORAGE_KEY"